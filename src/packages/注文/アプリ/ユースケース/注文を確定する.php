<?php

declare(strict_types=1);

namespace 注文\アプリ\ユースケース;

use 共通\トランザクション\トランザクションインターフェース;
use 共通\ログインユーザ\ログインユーザインターフェース;
use 注文\ドメイン\モデル\ユーザID;
use 注文\ドメイン\モデル\注文が確定された時;
use 注文\ドメイン\モデル\注文ファクトリ;
use 注文\ドメイン\モデル\注文リポジトリインターフェース;

class 注文を確定する
{
    public function __construct(
        private トランザクションインターフェース $トランザクション,
        private 注文リポジトリインターフェース $注文リポ,
        private 注文ファクトリ $注文ファクトリ,
        private ログインユーザインターフェース $ログインユーザ
    ) {
    }

    public function 実行(array $注文商品)
    {
        $ユーザid = new ユーザID($this->ログインユーザ::id());
        $登録成功したか？ = false;

        $this->トランザクション->スコープ(function () use ($ユーザid, $注文商品, &$登録成功したか？) {
            $商品 = $this->注文ファクトリ->作成する($ユーザid, $注文商品);

            $this->注文リポ->保存($商品);
            $登録成功したか？ = true;
        });

        if ($登録成功したか？) {
            注文が確定された時::作成する($ユーザid)->実行();
        }
    }
}
