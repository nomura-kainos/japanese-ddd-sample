<?php

declare(strict_types=1);

namespace 商品カテゴリ\インフラ\リポジトリ\小カテゴリ;

use 共通\仕様\選択;
use 共通\集約ルート\集約ルートチェッカーインターフェース;
use 商品カテゴリ\インフラ\エロクアント\小カテゴリエロクアント;
use 商品カテゴリ\インフラ\レスポンスデータ\小カテゴリ\小カテゴリレスポンスデータ;
use 商品カテゴリ\ドメイン\モデル\小カテゴリ\小カテゴリ;
use 商品カテゴリ\ドメイン\モデル\小カテゴリ\小カテゴリリポジトリインターフェース;

class 小カテゴリリポジトリ implements 小カテゴリリポジトリインターフェース
{
    private $集約ルートチェッカー;
    private $小カテゴリエロクアント;

    public function __construct(
        集約ルートチェッカーインターフェース $集約ルートチェッカー,
        小カテゴリエロクアント $小カテゴリエロクアント
    ) {
        $this->集約ルートチェッカー = $集約ルートチェッカー;
        $this->小カテゴリエロクアント = $小カテゴリエロクアント;
    }

    public function 仕様で取得(選択 $仕様): ?小カテゴリレスポンスデータ
    {
        $複数小カテゴリ = $this->小カテゴリエロクアント::all();
        if ($複数小カテゴリ->isEmpty()) {
            return null;
        }

        $仕様->基準を設定する($複数小カテゴリ->toArray());

        $小カテゴリ = $複数小カテゴリ->filter(function (小カテゴリエロクアント $小カテゴリ) use ($仕様) {
            return $仕様->満たすか($小カテゴリ);
        });

        if ($小カテゴリ->isEmpty()) {
            return null;
        }

        return new 小カテゴリレスポンスデータ($小カテゴリ->first());
    }

    public function 保存(小カテゴリ $カテゴリ)
    {
        $this->集約ルートチェッカー::チェック($カテゴリ);

        $this->小カテゴリエロクアント::updateOrCreate(
            [
                '大カテゴリid' => $カテゴリ->大カテゴリid(),
                '小カテゴリid' => $カテゴリ->小カテゴリid()
            ],
            [
                '名前' => $カテゴリ->名前(),
            ]
        );
    }
}
