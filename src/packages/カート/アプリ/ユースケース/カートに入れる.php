<?php

declare(strict_types=1);

namespace カート\アプリ\ユースケース;

use カート\ドメイン\モデル\カートID;
use カート\ドメイン\モデル\カートファクトリ;
use カート\ドメイン\モデル\カートリポジトリインターフェース;
use カート\ドメイン\モデル\カート内商品ID;
use カート\ドメイン\モデル\ユーザID;
use カート\ドメイン\モデル\最新カート仕様;
use カート\ドメイン\モデル\空カート仕様;
use 共通\トランザクション\トランザクションインターフェース;
use 共通\ログインユーザ\ログインユーザインターフェース;

class カートに入れる
{
    public function __construct(
        private トランザクションインターフェース $トランザクション,
        private カートリポジトリインターフェース $カートリポ,
        private カートファクトリ $カートファクトリ,
        private ログインユーザインターフェース $ログインユーザ,
        private 空カート仕様 $空カート仕様
    ) {
    }

    public function 実行(int $商品id, int $数量)
    {
        $this->トランザクション->スコープ(function () use ($商品id, $数量) {
            $ユーザid = new ユーザID($this->ログインユーザ::id());
            $商品id = new カート内商品ID($商品id);
            $最新カート = $this->カートリポ->仕様で取得(new 最新カート仕様($ユーザid));

            $カート = null;
            if ($this->空カート仕様->満たすか？($最新カート)) {
                $カート = $this->カートファクトリ->作成する($ユーザid);
            } else {
                $カート = $this->カートファクトリ->再構成する(new カートid($最新カート->id()), $ユーザid);
            }
            $カート->商品を追加する($商品id, $数量);

            $this->カートリポ->保存($カート);
        });
    }
}
