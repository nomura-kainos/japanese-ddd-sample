<?php

declare(strict_types=1);

namespace カート\インフラ\リポジトリ;

use カート\インフラ\エロクアント\カート内商品エロクアント;
use カート\ドメイン\モデル\カート;
use カート\インフラ\エロクアント\カートエロクアント;
use カート\ドメイン\モデル\カートID;
use カート\ドメイン\モデル\カートリポジトリインターフェース;
use カート\ドメイン\モデル\カート内商品ID;
use 共通\集約ルート\集約ルートチェッカーインターフェース;

class カートリポジトリ implements カートリポジトリインターフェース
{
    public function __construct(
        private 集約ルートチェッカーインターフェース $集約ルートチェッカー,
        private カートエロクアント $カートエロクアント,
        private カート内商品エロクアント $カート内商品エロクアント
    ) {
    }

    public function 保存(カート $カート)
    {
        $this->集約ルートチェッカー::チェック($カート);

        $this->カートエロクアント::updateOrCreate(
            [
                'id' => $カート->id(),
                'ユーザid' => $カート->ユーザid(),
            ],
            ['updated_at' => false] // 更新日時の変更
        );

        foreach ($カート->商品コレクション() as $商品) {
            $this->カート内商品エロクアント::updateOrCreate(
                [
                    'カートid' => $カート->id(),
                    '商品id' => $商品->商品id(),
                ],
                [
                    '数量' => $商品->数量(),
                    '注文済みか？' => $商品->注文済みか？(),
                ]
            );
        }
    }

    public function カート内商品を削除(カートID $カートid, カート内商品ID $商品id)
    {
        $this->カート内商品エロクアント::where([
            ['カートid', $カートid->値],
            ['商品id', $商品id->値],
        ])->delete();
    }
}
