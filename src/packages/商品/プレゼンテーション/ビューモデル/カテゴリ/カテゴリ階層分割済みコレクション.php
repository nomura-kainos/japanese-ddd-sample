<?php

declare(strict_types=1);

namespace 商品\プレゼンテーション\ビューモデル\カテゴリ;

use 共通\配列コピー\ディープコピー;
use 商品\インフラ\レスポンスデータ\商品カテゴリレスポンスデータ;
use 商品\インフラ\レスポンスデータ\商品カテゴリコレクションレスポンスデータ;

class カテゴリ階層分割済みコレクション
{
    private array $カテゴリコレクション;

    public function __construct(
        商品カテゴリコレクションレスポンスデータ $カテゴリコレクション,
    ) {
        $this->カテゴリコレクション = $this->カテゴリ階層に分割する($カテゴリコレクション);
    }

    private function カテゴリ階層に分割する(商品カテゴリコレクションレスポンスデータ $カテゴリコレクション): array
    {
        $コレクション = $カテゴリコレクション->取得();

        $大小カテゴリ = $this->大小カテゴリの階層をあわせる($コレクション);

        $カテゴリ階層に分割されたカテゴリ = $大小カテゴリ;
        return ディープコピー::実行($カテゴリ階層に分割されたカテゴリ);
    }

    private function 大小カテゴリの階層をあわせる(array $カテゴリコレクション): array
    {
        $大小カテゴリ = [];
        $大カテゴリ名 = null;

        foreach ($カテゴリコレクション as $小カテゴリ) {
            $同じ大カテゴリか？ = $大カテゴリ名 !== $小カテゴリ->大カテゴリ名();
            if ($同じ大カテゴリか？) {
                $大小カテゴリ[] = $this->大カテゴリの追加($小カテゴリ);
                $大カテゴリ名 = $小カテゴリ->大カテゴリ名();
            }
            $大小カテゴリ[] = $this->小カテゴリの追加($小カテゴリ);
        }

        return $大小カテゴリ ;
    }

    private function 大カテゴリの追加(商品カテゴリレスポンスデータ $小カテゴリ): 大カテゴリ
    {
        return new 大カテゴリ($小カテゴリ->大カテゴリ名());
    }

    private function 小カテゴリの追加(商品カテゴリレスポンスデータ $小カテゴリ): 小カテゴリ
    {
        return new 小カテゴリ(
            $小カテゴリ->大カテゴリid(),
            $小カテゴリ->小カテゴリid(),
            $小カテゴリ->小カテゴリ名()
        );
    }

    public function 取得(): array
    {
        return ディープコピー::実行($this->カテゴリコレクション);
    }
}
