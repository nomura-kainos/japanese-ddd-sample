<?php

declare(strict_types=1);

namespace 商品\アプリ\ユースケース;

use 共通\トランザクション\トランザクションインターフェース;
use 共通\配列コピー\ディープコピー;
use 商品\ドメイン\モデル\カテゴリ;
use 商品\ドメイン\モデル\レンタル料金;
use 商品\ドメイン\モデル\商品ID;
use 商品\ドメイン\モデル\商品クエリサービスインターフェース;
use 商品\ドメイン\モデル\商品ファクトリ;
use 商品\ドメイン\モデル\商品リポジトリインターフェース;

class 編集
{
    public function __construct(
        private トランザクションインターフェース $トランザクション,
        private 商品リポジトリインターフェース $商品リポ,
        private 商品クエリサービスインターフェース $商品クエリ,
        private 商品ファクトリ $商品ファクトリ
    ) {
    }

    public function 実行(int $商品id, string $名前, string $レンタル料金, array $カテゴリ)
    {
        $_カテゴリ = ディープコピー::実行($カテゴリ);

        $this->トランザクション->スコープ(function () use ($商品id, $名前, $レンタル料金, $_カテゴリ) {
            $商品レスポンスデータ = $this->商品クエリ->IDで1件取得(new 商品ID($商品id));
            $値段表記を消したレンタル料金 = (int)str_replace(',', '', $レンタル料金);

            $商品 = $this->商品ファクトリ->再構成する(
                new 商品ID($商品レスポンスデータ->id()),
                $名前,
                new レンタル料金($値段表記を消したレンタル料金),
                new カテゴリ($_カテゴリ['大カテゴリid'], $_カテゴリ['小カテゴリid'])
            );

            $this->商品リポ->保存($商品);
        });
    }
}
